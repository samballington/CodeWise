name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  pr-validation:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Check PR title format
      run: |
        if [[ "${{ github.event.pull_request.title }}" =~ ^(feat|fix|docs|style|refactor|test|chore)(\(.+\))?: .+ ]]; then
          echo "‚úÖ PR title follows conventional commit format"
        else
          echo "‚ùå PR title must follow format: type(scope): description"
          echo "Examples: feat: add new search feature, fix(backend): resolve query timeout"
          exit 1
        fi
        
    - name: Check for documentation files
      run: |
        if git diff --name-only origin/main...HEAD | grep -E '\.(md|txt)$'; then
          echo "‚ùå Documentation files detected in PR"
          echo "Please remove .md and .txt files as they should be gitignored"
          exit 1
        else
          echo "‚úÖ No documentation files in PR"
        fi
        
    - name: Check file size limits
      run: |
        large_files=$(git diff --name-only origin/main...HEAD | xargs -I {} sh -c 'test -f "{}" && find "{}" -size +10M' | head -10)
        if [[ -n "$large_files" ]]; then
          echo "‚ùå Large files detected:"
          echo "$large_files"
          echo "Files over 10MB should be stored with Git LFS"
          exit 1
        else
          echo "‚úÖ No large files detected"
        fi

  dependency-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Check Python dependencies
      run: |
        cd backend
        if [[ -f requirements.txt ]]; then
          echo "Checking for known vulnerabilities in Python packages..."
          pip install safety
          safety check -r requirements.txt || echo "‚ö†Ô∏è Vulnerability check completed with warnings"
        fi
        
    - name: Check Node.js dependencies  
      run: |
        cd frontend
        if [[ -f package.json ]]; then
          echo "Checking for known vulnerabilities in Node packages..."
          npm audit --audit-level moderate || echo "‚ö†Ô∏è Vulnerability check completed with warnings"
        fi

  performance-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Analyze bundle size (Frontend)
      run: |
        cd frontend
        npm ci
        npm run build --if-present
        
        if [[ -d ".next" ]]; then
          echo "üìä Analyzing bundle size..."
          npx @next/bundle-analyzer || echo "Bundle analysis completed"
        fi
        
    - name: Check Docker image sizes
      run: |
        echo "üê≥ Checking Docker image sizes..."
        services=("frontend" "backend" "indexer" "mcp_server")
        
        for service in "${services[@]}"; do
          if [[ -f "$service/Dockerfile" ]]; then
            echo "Building $service image for size check..."
            docker build -t "codewise-$service:test" "$service/" --quiet
            size=$(docker images "codewise-$service:test" --format "{{.Size}}")
            echo "$service image size: $size"
          fi
        done